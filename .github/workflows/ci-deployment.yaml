name: ADF Release pipeline

on:
  workflow_dispatch:
    inputs:
      Environment:
        type: environment
        description: Select the Environment for ADF deployment
        required: true
      Location:
        type: choice
        description: Select the location for ADF deployment
        required: false
        default: 'East US 2'
        options: 
        - East US 2
        - East US
      DryRun:
        type: boolean
        description: Select to run Dry Run or preview ADF deployment
   
permissions:
  id-token: write
  contents: read
  
jobs:
  Deploy-ADF-Dev:
    runs-on: windows-latest
    environment: ${{ inputs.Environment }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    # - name: Replace tokens in **/*.json
    #   uses: qetza/replacetokens-action@v1
    #   with:
    #      sources: '**/*.json'
    #      variables: '[${{ toJSON(vars) }}, ${{ toJSON(secrets) }}]'
    #      token-prefix: '#{'
    #      token-suffix: '}#'
   
    # - name: Delete unwanted integration runtime
    #   run: |
    #       $deletePattern = "${{ vars.deletefilespattern }}"
    #       $irsourcefolder = "${{ vars.irsourcefolder }}"
    #       $patterns = $deletePattern -replace '.*\{(.*)\}.*', '$1' -split ','
    #       $patterns | ForEach-Object { Write-Output "Pattern: $_" }
    #       foreach ($pattern in $patterns)
    #       {
    #         Write-Host "Processing - $pattern"
    #         Get-ChildItem -Path $irsourcefolder -Recurse | Where-Object { $_.Name -like $pattern } | Remove-Item -Force
    #       }

    # - name: Copy staged integration runtime to project folder
    #   run: |
    #       copy ./ADF/integrationRuntime ./ADF/APPS -Recurse    
          
    - name: Install Datafactory Az tools
      run: |
          Install-Module Az.Resources -Force -AllowClobber
          Install-Module Az.DataFactory -MinimumVersion "1.10.0" -Force -AllowClobber
          Install-Module azure.datafactory.tools -AllowClobber -Force
          Get-Module azure.datafactory.tools -ListAvailable | Import-Module
    
    # - name: Login to Az
    #   uses: azure/login@v2
    #   with:
    #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #     enable-AzPSSession: true
    
    - name: Publish to ADF instance
      run: |
          $Location = "${{ inputs.Location }}" 
          $dryrun = ""
          if (${{ inputs.DryRun }} -eq 'true') {
            $dryrun = "-DryRun"
            Write-Host "In Loop"
          }
          Publish-AdfV2FromJson -RootFolder "${{ vars.datafactorypath }}" -ResourceGroupName "${{ vars.resourcegroup }}" -DataFactoryName "${{ vars.datafactory }}" -Location "$Location" $dryrun 
